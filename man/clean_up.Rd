% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_up.R, R/wrappers.R
\name{clean_up}
\alias{clean_up}
\alias{clean_up_tidyverse}
\alias{clean_attach}
\alias{clean_attach_tidyverse}
\title{clean up namespace and package env}
\usage{
clean_up(
  pkgs,
  remove = getOption("now.lifecycles", default = c("superseded", "deprecated",
    "defunct")),
  force_remove = NULL,
  force_keep = NULL
)

clean_up_tidyverse(
  lifecycles = getOption("now.lifecycles", default = c("superseded", "deprecated",
    "defunct")),
  force_remove = NULL,
  force_keep = NULL
)

clean_attach(
  pkgs,
  remove = getOption("now.lifecycles", default = c("superseded", "deprecated",
    "defunct")),
  force_remove = NULL,
  force_keep = NULL
)

clean_attach_tidyverse(
  remove = getOption("now.lifecycles", default = c("superseded", "deprecated",
    "defunct")),
  force_remove = NULL,
  force_keep = NULL
)
}
\arguments{
\item{pkgs}{package names}

\item{remove}{lifecycles of functions to remove ("experimental", "superseded",
"deprecated", "defunct", "questioning"), can also include "reexports" to prevent
packages from reexporting functions from other packages.}

\item{force_remove, force_keep}{Names of additional functions to remove (resp. exceptions to keep),
can also be provided in the "pkg::fun" form to remove ambiguity.}
}
\value{
Returns \code{NULL} invisibly, called for side effects
}
\description{
\code{clean_up()} removes functions of given life cycles from
the namespace's exports so they're not attached with \code{library()} and not available
or suggested with \code{::}. It also removes them from the package env (on the search path)
if relevant. \code{clean_up_tidyverse()} is just a wrapper to apply it to the tidyverse
packages.
}
